<?php

/**
 * @file
 * Contains kidiklik_base.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_help().
 */
function kidiklik_base_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the kidiklik_base module.
    case 'help.page.kidiklik_base':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Fonctionnalités de base de Kidiklik') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function kidiklik_base_theme() {
  return [
    'kidiklik_base' => [
      'render element' => 'children',
    ],
  ];
}

function get_departement() {
	$globalSettings=\Drupal::service("settings");
	$dep=$globalSettings->get("dep");

	return $dep;
}
function get_term_departement() {
	$dep=get_departement();
	$term_dep="";
	if($dep)
		$term_dep=(int)current(\Drupal::entityTypeManager()
		->getStorage("taxonomy_term")
		->loadByProperties(['name'=>$dep]))->id();

	return $term_dep;
}


/**
 * modification de formulaire
 */
function kidiklik_base_form_alter(&$form, FormStateInterface $form_state, $form_id) {
	$term_dep=get_term_departement();
	if($form_id=="node_agenda_edit_form" || $form_id=="node_agenda_form") {
		/* le champ est configuré par défaut en multiple valeur, on bloque à une simple valeur */
		$form["field_adherent"]["widget"]["#multiple"]=FALSE;

	}
	/* on reformate le choix des activités pour ne choisir que des enfants */
	if($form_id=="node_activite_edit_form" || $form_id=="node_activite_form") {
		/* le champ est configuré par défaut en multiple valeur, on bloque à une simple valeur */
		$form["field_adherent"]["widget"]["#multiple"]=FALSE;
		$rub=$form["field_rubriques_activite"]["widget"]["#options"];
		$tab=[];
		$n="";
		foreach($rub as $k=>$r) {
			if($k!="_none") {
				$t=taxonomy_term_load($k);
				$p=current($t->parent->getValue()[0]);
				if(!(int)$p) {
					$n=current($t->name->getValue()[0]);
				} else {
					$tab[$n][$k]=current($t->name->getValue()[0]);
				}
			}
		}
		$form["field_rubriques_activite"]["widget"]["#options"]=$tab;
		$form["field_rubriques_activite"]["widget"]["#size"]=1;
		$form["#redirect"]="admin/activite";
	}
	if($form_id=="node_adherent_edit_form" || $form_id=="node_adherent_form") {
		/* on va récupérer la liste des clients du département concerné */
		$clients=\Drupal::entityTypeManager()->getStorage("node")->loadByProperties(["type"=>"client","field_departement"=>$term_dep]);
		/* vérification si un adhérent doit être lié à un client */
		if(\Drupal::routeMatch()->getParameters()->get("node"))
			$nid=(int)\Drupal::routeMatch()->getParameters()->get("node")->id();
		$entity_id=""; /* entité cliente */
		if($nid) {
			$database = \Drupal::database();
			$query=$database->query("select * from {node__field_adherent} where field_adherent_target_id = '".$nid."'");
			/* un adhérent est lié un seul client, on peut récupérer le premier élément courant */
			$result=current($query->fetchAll());
			$entity_id=$result->entity_id;
		}
		$tab=[];
		$tab[""]="Veuillez choisir un client";
		foreach($clients as $key=>$client) {
			$tab[$key]=$client->getTitle();
		}
		$form["field_client"]["widget"]["#options"]=$tab;
		if($entity_id && !count($form["field_client"]["widget"]["#default_value"]))
			$form["field_client"]["widget"]["#default_value"][]=(string)$entity_id;
		//kint($form);

	}
	
	if($form_id=="node_client_edit_form" || $form_id=="node_client_form") {
//ksm($form);
	}

	if($form_id=="node_agenda_edit_form" || $form_id=="node_agenda_form") {
		$adherents=\Drupal::entityTypeManager()->getStorage("node")->loadByProperties(["type"=>"adherent","field_departement"=>$term_dep]);
		$tab=[];
		$tab[""]="Veuillez choisir un client";
		foreach($adherents as $key=>$adherent) {
			$tab[$key]=$adherent->getTitle();
		}
		$form["field_adherent"]["widget"]["#options"]=$tab;

	}
}

/*
 * Modification de la requête sql d'une vue
 */
function kidiklik_base_views_query_alter(Drupal\views\ViewExecutable $view, Drupal\views\Plugin\views\query\Sql $query) {
	if($view->id()=="taxonomy_term") {
		$globalSettings=\Drupal::service("settings");

		// on récupére le code du département
		$dep=$globalSettings->get("dep");
		$term=current(\Drupal::entityTypeManager()
			->getStorage("taxonomy_term")
			->loadByProperties(['name'=>$dep]));
		$pid=current($query->where[0]["conditions"][0]["value"]);
		$liste_enfant=[];
		if(!empty($pid)) {
			$rubrique_term_enfant=\Drupal::entityTypeManager()
			->getStorage("taxonomy_term")
			->loadTree("rubriques_activite",$pid,2);
			foreach($rubrique_term_enfant as $t) {
				$liste_enfant[]=(int)$t->tid;
			}
		}
		if(count($liste_enfant)) {
			unset($query->where[0]);

			$configuration = array(
	        	'type' => 'INNER',
				'table' => 'taxonomy_index',
				'field' => 'nid',
				'left_table' => 'node_field_data',
				'left_field' => 'nid',
				'operator'   => '=',
			);

			$join = \Drupal\views\Views::pluginManager('join')
		        ->createInstance('standard', $configuration);
			$rel = $query->addRelationship('taxonomy_idx', $join, 'node_field_data');
			$query->addTable('taxonomy_index', $rel, $join, 'taxonomy_idx');
			$query->addWhere('', 'taxonomy_idx.tid', $liste_enfant, 'in');
		}

	}
	$view_display=array("page_activites","page_agenda","page_activites_tri","page_pub" ,"page_article","page_clients","page_adherent");
	
	if(in_array($view->current_display,$view_display)) {
		/*$host=explode(".",\Drupal::request()->getHost());
		$dep=$host[0];*/
		$globalSettings=\Drupal::service("settings");

		// on récupére le code du département
		$dep=$globalSettings->get("dep");
		/*
		 * On charge le terme correspondant au département
		 */	
		$term=current(\Drupal::entityTypeManager()
			->getStorage("taxonomy_term")
			->loadByProperties(['name'=>$dep]));


		$pid=current($query->where[0]["conditions"][0]["value"]);
		$liste_enfant=[];
		if(!empty($pid)) {
			$rubrique_term_enfant=\Drupal::entityTypeManager()
			->getStorage("taxonomy_term")
			->loadTree("rubriques_activite",$pid,2);
			foreach($rubrique_term_enfant as $t) {
				$liste_enfant[]=(int)$t->tid;
			}
		}
		if($term!==FALSE) {
			$term_id=current($term->tid->getValue());
			$configuration = array(
	        	'type' => 'INNER',
				'table' => 'node__field_departement',
				'field' => 'entity_id',
				'left_table' => 'node_field_data',
				'left_field' => 'nid',
				'operator'   => '=',
			);


			$join = \Drupal\views\Views::pluginManager('join')
		        ->createInstance('standard', $configuration);
			$rel = $query->addRelationship('field_dep', $join, 'node_field_data');
			$query->addTable('node__field_departement', $rel, $join, 'field_dep');
			$query->addWhere('', 'field_dep.field_departement_target_id', $term_id, '=');

			if(count($liste_enfant)) {
				$query->where[0]["conditions"][0]["value"]=[];
				$query->where[0]["conditions"][0]["field"]="node__field_rubriques_activite.field_rubriques_activite_target_id in (".implode(",",$liste_enfant).")";
				//$query->addWhere('', 'taxonomy_idx.tid', $term_id, '=');
			} /*else $query->addWhere('', 'taxonomy_idx.tid', $term_id, '=');*/
		}

	}
}
