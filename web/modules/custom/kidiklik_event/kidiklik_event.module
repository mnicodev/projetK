<?php

/**
 * @file
 * Contains kidiklik_event.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\kidiklik_event\Event\NodeInsertEvent;
use Drupal\kidiklik_event\Event\NodeUpdateEvent;

/**
 * Implements hook_help().
 */
function kidiklik_event_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the kidiklik_event module.
    case 'help.page.kidiklik_event':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Kidiklik Event') . '</p>';
      return $output;

    default:
  }
}

function kidiklik_event_node_insert(Drupal\Core\Entity\EntityInterface $entity) {
	\Drupal::service('event_dispatcher')->dispatch(NodeInsertEvent::NODE_INSERT, new NodeInsertEvent($entity));
}

/**
 * On ne peut faire un save dans un update
 * Donc on place les nouvelles valeurs dans presave
 */
function kidiklik_event_node_presave(Drupal\node\NodeInterface $node) {
	$type=current($node->get("type")->getValue())["target_id"];
	if($type=="agenda") {
		//kint($node);exit;
		$activite=\Drupal::entityTypeManager()
			->getStorage("node")
			->load($node->get("field_activite_save")->value);

		$node->set("field_activite",$activite);
		
		$ville=\Drupal::entityTypeManager()
			->getStorage("taxonomy_term")
			->load($node->get("field_ville_save")->value);
		$node->set("field_ville",$ville);
			// kint($ville);exit;
			
	}
	if($type=="activite" || $type=="client" || $type=="adherent"|| $type=="agenda") {
		$ville=\Drupal::entityTypeManager()
			->getStorage("taxonomy_term")
			->load($node->get("field_ville_save")->value);
		$node->set("field_ville",$ville);
	}
	
	if($type=="bloc_de_mise_en_avant") {
		$adherent=\Drupal::entityTypeManager()
				->getStorage("node")
				->load(current($node->get("field_adherent_cache")->getValue())["value"]);
		if(!empty($adherent)) {
			$adherent->__set("field_activites",$node);
			//$adherent->save();
			$node->set("field_adherent",$adherent);
		}
		
		/**
		 *  On ne prend plus en compte le champ bloc mise en avant
		 * les bloc de newsletter seront indépendants et marqué par le champs newsletter du bloc
		 */
		/*$newsletter=\Drupal::entityTypeManager()
				->getStorage("node")
				->load(current($node->get("field_newsletter")->getValue())["target_id"]);
			
		if(!empty($newsletter)) {
			
			$newsletter->get("field_bloc_de_mise_en_avant")->appendItem($node);
			
		}*/
		
		
	}
	
	
}


function kidiklik_event_node_update(Drupal\Core\Entity\EntityInterface $entity) {
	//45kint($entity);exit;
	$type=current($entity->type->getValue())["target_id"];
	if(in_array($type,\Drupal::service("settings")->get("available_content_for_mea"))) {
		
		$path=\Drupal::service('path.alias_manager')->getAliasByPath($entity->url());
		$blocs=$entity->get("field_mise_en_avant")->getValue();
		foreach($blocs as $bloc) {
			$node=\Drupal::entityTypeManager()->getStorage("node")->load($bloc["target_id"]);
			$node->set("field_lien",$path);
			$node->set("field_adherent",$entity->get("field_adherent")->getValue());
			if($entity->__isset("field_image"))
				$node->set("field_image",$entity->get("field_image")->getValue());
			if($type=="agenda") {
				$node->set("field_date",$entity->get("field_date")->getValue());
			}
			$node->validate();
			$node->save();
		}
	}


	if($type=="publicite" || $type=="activite" || $type=="agenda" || $type=="article" || $type=="reportage" || $type=="reportage" /*|| $type=="bloc_de_mise_en_avant"*/) {
			
		$adherent=\Drupal::entityTypeManager()
			->getStorage("node")
			->load(current($entity->get("field_adherent")->getValue())["target_id"]);
		$adherent->__set("field_activites",$entity);
		$adherent->save();
	}
	
	
	//\Drupal::service('event_dispatcher')->dispatch(NodeUpdateEvent::NODE_UPDATE, new NodeUpdateEvent($entity));
}
