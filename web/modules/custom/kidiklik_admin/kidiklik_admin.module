<?php

/**
 * @file
 * Contains kidiklik_admin.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Ajax\AjaxResponse;
use Drupal\Core\Ajax\ReplaceCommand;
use Drupal\Core\Ajax\InvokeCommand;
use Drupal\taxonomy\Entity\Term;
use Drupal\node\Entity\Node;
use Drupal\views\Views;

/**
 * Implements hook_help().
 */
function kidiklik_admin_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the kidiklik_admin module.
    case 'help.page.kidiklik_admin':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Fonctionnalités admin kidiklik') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function kidiklik_admin_theme() {
  return [
    'kidiklik_admin' => [
      'render element' => 'children',
    ],
  ];
}



function kidiklik_admin_preprocess_page_title(&$variables) {
	$user=\Drupal::entityTypeManager()->getStorage("user")->load(\Drupal::currentUser()->id());
		

	if($user->hasRole("administrateur_de_departement") && \Drupal::routeMatch()->getParameters()->get("taxonomy_term") && current(\Drupal::routeMatch()->getParameters()->get("taxonomy_term")->get("vid")->getValue())["target_id"]=="departement")
		$variables["title"]="Modification du contenu des pages";
}

function kidiklik_admin_entity_operation_alter(array &$operations, \Drupal\Core\Entity\EntityInterface $entity) {
}


/**
 * modification de formulaire
 */
function kidiklik_admin_form_alter(&$form, FormStateInterface $form_state, $form_id) {
	$term_dep=get_term_departement();
	
	/*foreach(\Drupal::service("settings")->get("available_content") as $item) {
		if($form_id=="node_".$item."_form" || $form_id=="node_".$item."_edit_form") {
			$form["#redirect"]="admin/reportages";
		}
	}*/
	
	if($form_id=="views_form_content_page_activites") {
		
	}
	
	if($form_id=="node_partenaire_form" || $form_id=="node_partenaire_edit_form") {
		
			$form["#redirect"]="/admin/partenaires";
			
	}
	
	if($form_id=="node_newsletter_form" || $form_id=="node_newsletter_edit_form") {
		$images_entete=\Drupal::entityTypeManager()->getStorage("taxonomy_term")->loadByProperties(["vid"=>"entetes_newsletter","field_departement"=>$term_dep]);
		//kint($image_entete);
		$tab[]="Choisir une entête";
		foreach($images_entete as $key=>$item) {
			$tab[$key]=$item->getName();
		}
		$form["field_image_d_entete"]["widget"]["#options"]=$tab;
		//kint($form);
	}
	
	if($form_id=="node_publicite_form" || $form_id=="node_publicite_edit_form") {
		unset($form["field_date"]["widget"]["add_more"]);
		$form["#redirect"]="/admin/publicites";
		$form["field_adherent"]["widget"]["#multiple"]=FALSE;
		$adherents=\Drupal::entityTypeManager()->getStorage("node")->loadByProperties(["type"=>"adherent","field_departement"=>$term_dep]);
		$tab=[];
		$tab[""]="Veuillez choisir un client";
		foreach($adherents as $key=>$adherent) {
			$tab[$key]=$adherent->getTitle();
		}
		$form["field_adherent"]["widget"]["#options"]=$tab;

		foreach($form['field_partage_departements']['widget']['#options'] as $key=>$item)
			if(!(int)$item->__toString()) unset($form['field_partage_departements']['widget']['#options'][$key]);
			else {
				$nom_departement=\Drupal::entityTypeManager()->getStorage("taxonomy_term")->load($key);
				$form['field_partage_departements']['widget']['#options'][$key]=current($nom_departement->get("field_nom")->getValue())["value"]." (".$nom_departement->getName().")";;
//				kint($nom_departement->get("field_nom")->getValue());

			}
			//kint($item->__toString());


	}
	
	if($form_id=="taxonomy_term_departement_form") {
		$user=\Drupal::entityTypeManager()->getStorage("user")->load(\Drupal::currentUser()->id());
		/* pour l'édition des pages de contenu, on enléve certains champs, non dispensable pour les admin dep */
		if($user->hasRole("administrateur_de_departement")) {
			unset($form["relations"]);
			unset($form["name"]);
			unset($form["field_nom"]);
			unset($form["status"]);
			unset($form["description"]);
		//kint($form);
		}
	}
	
	if($form_id=="taxonomy_term_rubriques_activite_form") {
		
		/* on récupére le paramètre url destination */
		$arg=\Drupal::request()->query->get("destination");
		/* puis l'id de la catégorie mère */
		$tab=explode("/",$arg);
		$cat_mere=\Drupal::entityTypeManager()->getStorage("taxonomy_term")->load($tab[3]);
		if(!empty($cat_mere)) 
			$form["cat_mere"]=[
				"#type"=>"html_tag",
				"#tag" => "H3",
				"#value" => "Rubrique ".$cat_mere->getName(),
				"#weight" => 0,
			];

		$form["field_departement"]["widget"][0]["target_id"]["#default_value"]=taxonomy_term_load($term_dep);
		/* on va lister uniquement les catégorie mère */
		$tmp=\Drupal::entityTypeManager()->getStorage("taxonomy_term")->loadByProperties(["vid"=>"rubriques_activite"]);
		$liste=[];
		foreach($tmp as $key=>$item) {
			if(!current($item->parent->getValue()[0])) {
				$liste[$key]=$item->getName();

			}
		}
		//$form["relations"]["parent"]["#multiple"]=FALSE;
		$form["relations"]["parent"]["#options"]=$liste;
		$form["relations"]["parent"]["#default_value"]=$tab[3];
		$form["relations"]["parent"]["#multiple"]=false;

		//kint($form);


	}
	
	if($form_id=="taxonomy_term_entetes_newsletter_form") {
		$form["field_departement"]["widget"][0]["target_id"]["#default_value"]=taxonomy_term_load($term_dep);
	}

	if($form_id=="node_bloc_de_mise_en_avant_edit_form" || $form_id=="node_bloc_de_mise_en_avant_form") {
		$form["field_adherent"]["widget"]["#multiple"]=FALSE;
		
		$adherents=\Drupal::entityTypeManager()->getStorage("node")->loadByProperties(["type"=>"adherent","field_departement"=>$term_dep]);
		$tab[""]="Veuillez choisir un adhérent";
		foreach($adherents as $key=>$adherent) {
			$tab[$key]=$adherent->getTitle();
		}
		$form["field_adherent"]["widget"]["#options"]=$tab;
	}
	
	if($form_id=="node_agenda_edit_form" || $form_id=="node_agenda_form") {
		$adherents=\Drupal::entityTypeManager()->getStorage("node")->loadByProperties(["type"=>"adherent","field_departement"=>$term_dep]);
		$form["type"]="agenda";
		/* on vient d'une fiche adhérent */
		if($adherent_id=\Drupal::request()->query->get("adherent")) {
			$adherent=Node::load($adherent_id);
			//ksm($form["field_adresse"]);
			$form["field_adherent"]["widget"]["#default_value"]=$adherent_id;
			$form["field_adresse"]["widget"][0]["value"]['#default_value']=$adherent->get("field_adresse")->value;
			$form["field_code_postal"]["widget"][0]["value"]['#default_value']=$adherent->get("field_code_postal")->value;
			$ville_id=current($adherent->get("field_ville")->getValue())["target_id"];
			$ville_term=\Drupal::entityTypeManager()->getStorage("taxonomy_term")->load($ville_id);
			$ville=[$ville_id=>$ville_term->getName()];
			$form["field_ville"]=[
				"widget"=>[
					"#type"=>"select",
					"#title"=>"Ville",
					"#options"=>$ville,
				],
				"#weight"=>32,
			];
			$form["#group_children"]["field_ville"]="group_coordonnees";
			$form["field_telephone"]["widget"][0]["value"]['#default_value']=$adherent->get("field_telephone")->value;
			$form["field_email"]["widget"][0]["value"]['#default_value']=$adherent->get("field_email")->value;
			$form["field_lien"]["widget"][0]["value"]['#default_value']=$adherent->get("field_lien")->value;
			
			$activites=\Drupal::entityTypeManager()->getStorage("node")->loadByProperties(["type"=>"activite","field_adherent"=>$adherent_id]);
			$activites_list=[""=>"Choisissez l'activité"];
			foreach($activites as $key=>$activite) $activites_list[$key]=$activite->getTitle();
			
			$form["field_activite"]=[
				"#type"=>"select",
				"#title"=>"Activités",
				"#options"=> $activites_list($activites),
			];
			$form["#group_children"]["field_activite"]="group_coordonnees";
			
			
			$form["actions"]["retour"]=[
				"#type"=>"html_tag",
				"#tag"=>"a",
				"#value"=>"Retour",
				"#attributes"=>[
					"href"=>\Drupal::request()->query->get("destination"),//."#edit-group-agenda",
					"class"=>[
						"btn","btn-primary"
					]
				],
				"#weight"=>50,
			];
			//ksm($form);
		} /* fin je viens d'une fiche adhérent */
		else {
			
			
			$form["activite"]=[
				"#type"=>"select",
				"#title"=>"Activité",
				"#options"=>["Choisissez une activité ..."],
			];
			$form["#group_children"]["activite"]='group_coordonnees';
		}
		
		//
		/*$ville_id=current($adherent->get("field_ville")->getValue())["target_id"];
		$ville_term=\Drupal::entityTypeManager()->getStorage("taxonomy_term")->load($ville_id);
		$ville=[$ville_id=>$ville_term->getName()];
		$form["field_ville"]=[
			"widget"=>[
				"#type"=>"select",
				"#title"=>"Ville",
				"#options"=>$ville,
			],
			"#weight"=>32,
		];*/
		
		$tab=[];
		$tab[""]="Veuillez choisir un adhérent";
		
		//$tab[""]="Veuillez choisir une activité";
		
		//	kint($form["field_ville"]["widget"]);
		foreach($adherents as $key=>$adherent) {
			$tab[$key]=$adherent->getTitle();
		}
		$form["field_adherent"]["widget"]["#options"]=$tab;
		
		/* le champ est configuré par défaut en multiple valeur, on bloque à une simple valeur */
		$form["field_adherent"]["widget"]["#multiple"]=FALSE;
		$form["field_adherent"]["widget"]["#ajax"]=[
			"callback"=>"getAjaxCoordonnees",
			"disable-refocus" => FALSE,
			"event" => "change",
			"wrapper" =>"coordonnees-adherent",
			"progress"=>[
				"type"=>"throbber",
				"message"=>"Analyse",
			],

		];
		
		$form["field_code_postal"]["widget"][0]["value"]["#ajax"]=[
			"callback"=>"getAjaxVille",
			"disable-refocus" => TRUE,
			"event" => "blur",
			
			"wrapper" =>"edit-field-ville-wrapper",
			
			"progress"=>[
				"type"=>"throbber",
				"message"=>NULL,
			],

		];
		ksm($form);
		//if($form["field_activite"]["widget"]['#default_value']) 
		//$form["field_activite"]["widget"]["#options"]=[""];
		
		$form["#attached"]["library"][]="kidiklik_admin/kidiklik_admin.commands";
		$form["#submit"][]="kidiklik_admin_agenda_form_submit";
		$form["#validate"][]="kidiklik_admin_agenda_form_validate";
		//ksm($form);

	} /* fin form agenda */
	
	if($form_id=="node_article_edit_form" || $form_id=="node_article_form" || $form_id=="node_reportage_edit_form" || $form_id=="node_reportage_form") {
		$adherents=\Drupal::entityTypeManager()->getStorage("node")->loadByProperties(["type"=>"adherent","field_departement"=>$term_dep]);
		$tab=[];
		$tab[""]="Veuillez choisir un client";
		foreach($adherents as $key=>$adherent) {
			$tab[$key]=$adherent->getTitle();
		}
		$form["field_adherent"]["widget"]["#options"]=$tab;
		
		/* le champ est configuré par défaut en multiple valeur, on bloque à une simple valeur */
		$form["field_adherent"]["widget"]["#multiple"]=FALSE;
		if($form_id=="node_article_edit_form" || $form_id=="node_article_form")	$form["#redirect"]="/admin/articles";
		else $form["#redirect"]="/admin/reportages";
	}
	
	
	/* on reformate le choix des activités pour ne choisir que des enfants */
	if($form_id=="node_activite_edit_form" || $form_id=="node_activite_form") {
		$form["#attached"]["library"][]="kidiklik_admin/kidiklik_admin.commands";
		//kint($form);
		/* le champ est configuré par défaut en multiple valeur, on bloque à une simple valeur */
		$form["field_adherent"]["widget"]["#multiple"]=FALSE;
		$form["field_adherent"]["widget"]["#ajax"]=[
			"callback"=>"getAjaxCoordonnees",
			"disable-refocus" => FALSE,
			
			"event" => "change",
			"wrapper" =>"coordonnees-adherent",
			"progress"=>[
				"type"=>"throbber",
				"message"=>"Analyse",
			],

		];
		
		
		
		if($adherent_id=\Drupal::request()->query->get("adherent")) {
			$adherent=Node::load($adherent_id);
			//ksm($form["field_adresse"]);
			$form["field_adherent"]["widget"]["#default_value"]=$adherent_id;
			$form["field_adresse"]["widget"][0]["value"]['#default_value']=$adherent->get("field_adresse")->value;
			$form["field_code_postal"]["widget"][0]["value"]['#default_value']=$adherent->get("field_code_postal")->value;
			$ville_id=current($adherent->get("field_ville")->getValue())["target_id"];
			$ville_term=\Drupal::entityTypeManager()->getStorage("taxonomy_term")->load($ville_id);
			$ville=[$ville_id=>$ville_term->getName()];
			$form["field_ville"]=[
				"widget"=>[
					"#type"=>"select",
					"#title"=>"Ville",
					"#options"=>$ville,
				],
				"#weight"=>32,
			];
			$form["#group_children"]["field_ville"]="group_informations";
			$form["field_telephone"]["widget"][0]["value"]['#default_value']=$adherent->get("field_telephone")->value;
			$form["field_email"]["widget"][0]["value"]['#default_value']=$adherent->get("field_email")->value;
			$form["field_lien"]["widget"][0]["value"]['#default_value']=$adherent->get("field_lien")->value;
			//ksm($form);
			
			$form["actions"]["retour"]=[
				"#type"=>"html_tag",
				"#tag"=>"a",
				"#value"=>"Retour",
				"#attributes"=>[
					"href"=>\Drupal::request()->query->get("destination"),//."#edit-group-activite",
					"class"=>[
						"btn","btn-primary"
					]
				],
				"#weight"=>50,
			];
			
		} else if(\Drupal::currentUser()->id()!=1) {/* formattage de la balise select avec affichage par catégorie */
			$rub=$form["field_rubriques_activite"]["widget"]["#options"];
			$tab=[];
			$n="";
			foreach($rub as $k=>$r) {
				if($k!="_none") {
					$t=taxonomy_term_load($k);
					$p=current($t->parent->getValue()[0]);
					if(!(int)$p) {
						$n=current($t->name->getValue()[0]);
					} else {
						if(current($t->get("field_departement")->getValue())["target_id"]==$term_dep)
							$tab[$n][$k]=current($t->name->getValue()[0]);
					}
				}
			}
			$form["field_rubriques_activite"]["widget"]["#options"]=$tab;
		
			$form["field_rubriques_activite"]["widget"]["#size"]=1;
			$form["#redirect"]="/admin/activites";
			
			$adherents=\Drupal::entityTypeManager()->getStorage("node")->loadByProperties(["type"=>"adherent","field_departement"=>$term_dep]);
			$tab=[];
			$tab[""]="Veuillez choisir un client";
			foreach($adherents as $key=>$adherent) {
				$tab[$key]=$adherent->getTitle();
			}
			$form["field_adherent"]["widget"]["#options"]=$tab;
			
			if($form["field_ville"]["widget"]["#default_value"]) {
				foreach($form["field_ville"]["widget"]["#options"] as $key=>&$item) {
					
					
					if($key!=(int)current($form["field_ville"]["widget"]["#default_value"])) unset($form["field_ville"]["widget"]["#options"][$key]);
				}
				
			}/*else $form["field_ville"]["widget"]["#options"]=[];*/
		}
	} /* fin form activite */
	
	
	
	if($form_id=="node_adherent_edit_form" || $form_id=="node_adherent_form") {
		$form["#attached"]["library"][]="kidiklik_admin/kidiklik_admin.commands";
		/* on va récupérer la liste des clients du département concerné */
		$clients=\Drupal::entityTypeManager()->getStorage("node")->loadByProperties(["type"=>"client","field_departement"=>$term_dep]);
		/* vérification si un adhérent doit être lié à un client */
		if(\Drupal::routeMatch()->getParameters()->get("node"))
			$nid=(int)\Drupal::routeMatch()->getParameters()->get("node")->id();
		$entity_id=""; /* entité cliente */
		if($nid) {
			$database = \Drupal::database();
			$query=$database->query("select * from {node__field_adherent} where field_adherent_target_id = '".$nid."'");
			/* un adhérent est lié à un seul client, on peut récupérer le premier élément courant */
			$result=current($query->fetchAll());
			$entity_id=$result->entity_id;
		}
		$tab=[];
		$tab[""]="Veuillez choisir un client";
		foreach($clients as $key=>$client) {
			$tab[$key]=$client->getTitle();
		}
		$form["field_client"]["widget"]["#options"]=$tab;
		if($entity_id && !count($form["field_client"]["widget"]["#default_value"]))
			$form["field_client"]["widget"]["#default_value"][]=(string)$entity_id;
			
		$form["field_code_postal"]["widget"][0]["value"]["#ajax"]=[
			"callback"=>"getAjaxVille",
			"disable-refocus" => TRUE,
			"event" => "blur",
			
			"wrapper" =>"edit-field-ville-wrapper",
			
			"progress"=>[
				"type"=>"throbber",
				"message"=>NULL,
			],

		];
		if($form["field_ville"]["widget"]["#default_value"]) {
			foreach($form["field_ville"]["widget"]["#options"] as $key=>&$item) {
				
				
				if($key!=(int)current($form["field_ville"]["widget"]["#default_value"])) unset($form["field_ville"]["widget"]["#options"][$key]);
			}
			
		}//else $form["field_ville"]["widget"]["#options"]=[];
	//	kint($form["field_ville"]);
	
		/* Vue des contenus d'un adhérents */
		$onglets=["activite","agenda","article","reportage","bloc_de_mise_en_avant"];
		
		$form["actions"]["contenu"]=[
				"#type"=>"html_tag",
				"#tag" => "a",
				"#value"=>"Voir les contenus",
				"#attributes"=>[
					"href"=>"/admin/adherent/".\Drupal::request()->get("node")->id()."?adherent_id=".\Drupal::request()->get("node")->id(),
					"class"=>"btn btn-primary"
					
				],
				"#weight"=>30,
				
				
			];
		
		
		
		

	} /* fin form adherent */
	
	if($form_id=="node_client_edit_form" || $form_id=="node_client_form") {
		$form["#attached"]["library"][]="kidiklik_admin/kidiklik_admin.commands";
		/* on met en place la fonctionnalité AJAX */
		$form["field_code_postal"]["widget"][0]["value"]["#ajax"]=[
			"callback"=>"getAjaxVille",
			"disable-refocus" => TRUE,
			"event" => "blur",
			
			"wrapper" =>"edit-field-ville-wrapper",
			
			"progress"=>[
				"type"=>"throbber",
				"message"=>NULL,
			],

		];
		if($form["field_ville"]["widget"]["#default_value"]) {
			foreach($form["field_ville"]["widget"]["#options"] as $key=>&$item) {
				
				
				if($key!=(int)current($form["field_ville"]["widget"]["#default_value"])) unset($form["field_ville"]["widget"]["#options"][$key]);
			}
			
		}else $form["field_ville"]["widget"]["#options"]=[];

	}
	
	


}


function _get_list_content(array &$form, FormStateInterface $form_state) {
	kint_require();
	$element= $form_state->getTriggeringElement()["#arg"]; 
	 //$output = @Kint::dump($form);
	foreach($form_state->getTriggeringElement() as $key=>$item) {
		$str="";
		print_r($item,$str);
		
		$output.=$str."<br>";
		
	}
	//$output.=$form_state->getValue("article_date_deb").$element["type"];
	return ["#markup"=>$output];
}

function kidiklik_admin_field_widget_form_alter(&$element, \Drupal\Core\Form\FormStateInterface $form_state, $context) {
	$term_dep=get_term_departement();
	if($element["#title"]=="Activité") {
		
		$activites_list=\Drupal::entityTypeManager()->getStorage("node")->loadByProperties(["type"=>"activite","field_departement"=>$term_dep]);
		$tab=["Choisissez une activité ..."];
		foreach($activites_list as $key=>$activite) $tab[$key]=$activite->getTitle();
		
		
		$element["#options"]=$tab;
		
	}
	
	if($element["#title"]=="Adhérent") {
		
		$adherent_list=\Drupal::entityTypeManager()->getStorage("node")->loadByProperties(["type"=>"adherent","field_departement"=>$term_dep]);
		$tab=["Choisissez un adhérent ..."];
		foreach($adherent_list as $key=>$adherent) $tab[$key]=$adherent->getTitle();
		
		
		$element["#options"]=$tab;
		
	}
}

function kidiklik_admin_agenda_form_submit(&$form, FormStateInterface $form_state) {
	//$form["field_activite"]["widget"]["#options"]=$form["save_activite"];
	//kint($form_state);kint($form);	kint($form["field_activite"]);exit;
	
	$form["field_activite"]["#needs_validation"]=false;
	$form["field_activite"]["widget"]["#needs_validation"]=false;
	$form["field_activite"]["widget"]["#limit_validation_errors"]=[];
	$form["field_activite"]["#validated"]=true;
	
}

function kidiklik_admin_agenda_form_validate($form, FormStateInterface $form_state) {
	
}

function getAjaxVille(array &$form, FormStateInterface $form_state) {
	$cp=current($form_state->getValue("field_code_postal"));
	/* je cherche le term possédant le code postal saisi */
	$query=\Drupal::entityQuery('taxonomy_term');
	$query->condition("field_code_postal",$cp); 
	//$ville_id=$query->execute();
	//return $form["field_code_postal"];
	/* on charge tous les termes correspondant à la ville */
	$villes=Term::loadMultiple($query->execute());//current(\Drupal::entityTypeManager()->getStorage("taxonomy_term")->loadByProperties(["vid"=>"ville","tid"=>$ville_id]));
	$tab=array();
	
	/* on construit un tableau qui va être envoyé en json à JS */
	foreach($villes as $ville) {
		$tab[]=["key"=>$ville->id(),"val"=>$ville->getName()];
	}
	$form["field_ville"]["widget"]["#options"]=$tab;
	//return $form["field_ville"];
	$response = new AjaxResponse();
	//kint_require();
	
	 //$output = @Kint::dump($tab);
	// $response->addCommand(new ReplaceCommand("#edit-field-ville-wrapper", $output ));
	$response->addCommand(new InvokeCommand(NULL,"getAjaxVille", [$tab] ));
	return $response;
}

function getAjaxCoordonnees(array &$form, FormStateInterface $form_state) {

	/*if($adherent=$form_state->getValue("field_adherent")) {
		$selectedText = $form['field_adherent']['#options'][$adherent];
      $form['output']['#value'] = $selectedText;
	}*/
	
	//return ['#markup' => $adherent];
	
	$response = new AjaxResponse();
	$select_id=current($form_state->getValue("field_adherent"));
	$adherent=current(\Drupal::entityTypeManager()->getStorage("node")->loadByProperties(["type"=>"adherent","nid"=>$select_id]));
	/* recherche des activites en fonction de l'adhérent */ 
	$activites=\Drupal::entityTypeManager()->getStorage("node")->loadByProperties(["type"=>"activite","field_adherent"=>$select_id]);
	if(is_object($adherent)) {
		
		/* cette methode fonctionne mais ne semble pas permettre de choisir plus d'une sélection */ 
		$form["field_adresse"]["widget"][0]["value"]["#value"]=current($adherent->get("field_adresse")->getValue());
		$form["field_code_postal"]["widget"][0]["value"]["#value"]=current($adherent->get("field_code_postal")->getValue());
		$form["field_telephone"]["widget"][0]["value"]["#value"]=current($adherent->get("field_telephone")->getValue())["value"];
		$form["field_email"]["widget"][0]["value"]["#value"]=current($adherent->get("field_email")->getValue());
		$form["field_lien"]["widget"][0]["value"]["#value"]=current($adherent->get("field_lien")->getValue());
		if($form["type"]=="agenda") {
			$tab[]="Veuillez choisir une activité";
			foreach($activites as $activite) {
				
				$tab[$activite->id()]=$activite->getTitle();
			}
			$form["field_activite"]=[
				"#type"=>"select",
				"#options"=>$tab,
				"#title"=>"Activités",
			];
			$form["activite_cache"]=[
				"#type"=>"textfield",
				"#title"=>"Act",
			];
		}
		
		
		
		$ville_id=current($adherent->get("field_ville")->getValue())["target_id"];
		$ville_term=\Drupal::entityTypeManager()->getStorage("taxonomy_term")->load($ville_id);
		$ville=[$ville_id=>$ville_term->getName()];
		$form["field_ville"]=[
			"widget"=>[
				"#type"=>"select",
				"#title"=>"Ville",
				"#options"=>$ville,
			],
			"#weight"=>32,
		];
		
		
		$form["coordonnee"]=[
			"#type"=>"div",
			"#prefix"=>"<div id='coordonnees-adherent'>",
			"#suffix"=>"</div>",
		];
		$form["coordonnee"][]=$form["field_adresse"];
		$form["coordonnee"][]=$form["field_code_postal"];
		$form["coordonnee"][]=$form["field_ville"];
		$form["coordonnee"][]=$form["field_telephone"];
		$form["coordonnee"][]=$form["field_email"];
		$form["coordonnee"][]=$form["field_lien"];
		$form["coordonnee"][]=$form["field_lieu"];
		$form["coordonnee"][]=$form["field_activite"];
		$form["coordonnee"][]=$form["activite_cache"];
		
		
		$renderer= \Drupal::service("renderer");
		$renderedField=$renderer->render($form["coordonnee"]);
		
		$response->addCommand(new ReplaceCommand('#coordonnees-adherent', $renderedField));
		return $response; 
		//$form["coordonnee"][]=$form["field_ville"];
		//return $form["coordonnee"];
		
		/* methode avec un appel JS */
		/*$ville=current(\Drupal::entityTypeManager()->getStorage("taxonomy_term")->loadByProperties(["vid"=>"ville","tid"=>current($adherent->get("field_ville")->getValue())["target_id"]]));
		$test["adresse"]=current($adherent->get("field_adresse")->getValue());
		$test["code_postal"]=current($adherent->get("field_code_postal")->getValue());
		$test["telephone"]=current($adherent->get("field_telephone")->getValue());
		$test["email"]=current($adherent->get("field_email")->getValue());
		$test["ville"]=["id"=>$ville->id(),"name"=>$ville->getName()];//["id"=>current($adherent->get("field_ville")->getValue());
		$test["lien"]=current($adherent->get("field_lien")->getValue());
		
		
		foreach($activites as $activite) {
			$test["activites"][]=["id"=>$activite->id(),"name"=>$activite->getTitle()];
		}*/
		
	}
	//return [];
	
//	kint_require();

	// $debugOut = @Kint::dump($test);	
	//kint($test);
	$response->addCommand(new InvokeCommand(NULL, 'getAjaxCoordonnees', [$test]));
	return $response;
}


function kidiklik_admin_views_query_alter(Drupal\views\ViewExecutable $view, Drupal\views\Plugin\views\query\QueryPluginBase $query) {
	if($view->current_display=="page_2") {
		$date_deb="";
		$date_fin="";
		$date_deb=\Drupal::request()->get("date_deb");
		$date_fin=\Drupal::request()->get("date_fin");
		
		if($date_deb) {
			if(!$date_fin)
				$query->where[1]["conditions"][0]["field"]="DATE_FORMAT(paragraphs_item_field_data_node__field_date__paragraph__field_date_de_debut.field_date_de_debut_value, '%Y-%m-%d') >= DATE_FORMAT('".$date_deb."', '%Y-%m-%d') 
				OR ('".$date_deb."' between DATE_FORMAT(paragraphs_item_field_data_node__field_date__paragraph__field_date_de_debut.field_date_de_debut_value, '%Y-%m-%d') and DATE_FORMAT(paragraphs_item_field_data_node__field_date__paragraph__field_date_de_fin.field_date_de_fin_value, '%Y-%m-%d'))";
			else
				$query->where[1]["conditions"][0]["field"]="DATE_FORMAT(paragraphs_item_field_data_node__field_date__paragraph__field_date_de_debut.field_date_de_debut_value, '%Y-%m-%d') <= DATE_FORMAT('".$date_deb."', '%Y-%m-%d') 
				OR (DATE_FORMAT(paragraphs_item_field_data_node__field_date__paragraph__field_date_de_debut.field_date_de_debut_value, '%Y-%m-%d') BETWEEN '".$date_deb."' and '".$date_fin."')";
				
		} 
		if($date_fin) {
			if(!$date_deb)
				$query->where[1]["conditions"][1]["field"]="DATE_FORMAT(paragraphs_item_field_data_node__field_date__paragraph__field_date_de_fin.field_date_de_fin_value, '%Y-%m-%d') <= DATE_FORMAT('".$date_fin."', '%Y-%m-%d') 
				OR ('".$date_fin."' between DATE_FORMAT(paragraphs_item_field_data_node__field_date__paragraph__field_date_de_debut.field_date_de_debut_value, '%Y-%m-%d') and DATE_FORMAT(paragraphs_item_field_data_node__field_date__paragraph__field_date_de_fin.field_date_de_fin_value, '%Y-%m-%d'))";
			else
				$query->where[1]["conditions"][1]["field"]="DATE_FORMAT(paragraphs_item_field_data_node__field_date__paragraph__field_date_de_fin.field_date_de_fin_value, '%Y-%m-%d') >= DATE_FORMAT('".$date_fin."', '%Y-%m-%d') 
				OR (DATE_FORMAT(paragraphs_item_field_data_node__field_date__paragraph__field_date_de_fin.field_date_de_fin_value, '%Y-%m-%d') BETWEEN '".$date_deb."' and '".$date_fin."')";
				
		} 
		
		//
		//kint($query->where[1]["conditions"]);
		//$query->where[1]["conditions"][0]["value"][]="2020-09-06";
		
	}
	
	//kint($view->current_display);
	if($view->current_display=="contenus_adherent") {
		//ksm($query);
		
		
		if(!$date_deb=\Drupal::request()->get('field_date_de_debut_value')) {
			$configuration = array(
	        	'type' => 'LEFT',
				'table' => 'paragraph__field_date_de_debut',
				'field' => 'entity_id',
				'left_table' => 'paragraphs_item_field_data_node__field_date',
				'left_field' => 'id',
				'operator'   => '=',
			);


			$join = \Drupal\views\Views::pluginManager('join')
		        ->createInstance('standard', $configuration);
			$rel = $query->addRelationship('paragraphs_item_field_data_node__field_date__paragraph__field_date_de_debut', $join, 'paragraphs_item_field_data');
			//$query->addTable('node__field_departement', $rel, $join, 'field_dep');
			//$query->addWhere('', 'field_dep.field_departement_target_id', $term_id, '=');
		}
		if(!$date_fin=\Drupal::request()->get('field_date_de_fin_value')) {
			$configuration = array(
	        	'type' => 'LEFT',
				'table' => 'paragraph__field_date_de_fin',
				'field' => 'entity_id',
				'left_table' => 'paragraphs_item_field_data_node__field_date',
				'left_field' => 'id',
				'operator'   => '=',
			);


			$join = \Drupal\views\Views::pluginManager('join')
		        ->createInstance('standard', $configuration);
			$rel = $query->addRelationship('paragraphs_item_field_data_node__field_date__paragraph__field_date_de_fin', $join, 'paragraphs_item_field_data');
		}
		
		
		//kint($query->where);exit;
		///DATE_FORMAT(paragraphs_item_field_data_node__field_date__paragraph__field_date_de_debut.field_date_de_debut_value, '%Y-%m-%d') >= DATE_FORMAT('2020-09-26T00:00:00', '%Y-%m-%d')
		if($date_deb) {
			//ksm($date_deb);
			if(!$date_fin)
				$query->where[1]["conditions"][0]["field"]="DATE_FORMAT(paragraphs_item_field_data_node__field_date__paragraph__field_date_de_debut.field_date_de_debut_value, '%Y-%m-%d') >= DATE_FORMAT('".$date_deb."', '%Y-%m-%d') 
				OR ('".$date_deb."' between DATE_FORMAT(paragraphs_item_field_data_node__field_date__paragraph__field_date_de_debut.field_date_de_debut_value, '%Y-%m-%d') and DATE_FORMAT(paragraphs_item_field_data_node__field_date__paragraph__field_date_de_fin.field_date_de_fin_value, '%Y-%m-%d'))";
			else
				$query->where[1]["conditions"][0]["field"]="DATE_FORMAT(paragraphs_item_field_data_node__field_date__paragraph__field_date_de_debut.field_date_de_debut_value, '%Y-%m-%d') <= DATE_FORMAT('".$date_deb."', '%Y-%m-%d') 
				OR (DATE_FORMAT(paragraphs_item_field_data_node__field_date__paragraph__field_date_de_debut.field_date_de_debut_value, '%Y-%m-%d') BETWEEN '".$date_deb."' and '".$date_fin."')";
				
		} 
		if($date_fin) {
			//ksm($date_fin);
			if(!$date_deb) {
				//unset()
				$query->where[1]["conditions"][0]["field"]="DATE_FORMAT(paragraphs_item_field_data_node__field_date__paragraph__field_date_de_fin.field_date_de_fin_value, '%Y-%m-%d') <= DATE_FORMAT('".$date_fin."', '%Y-%m-%d') 
				OR ('".$date_fin."' between DATE_FORMAT(paragraphs_item_field_data_node__field_date__paragraph__field_date_de_debut.field_date_de_debut_value, '%Y-%m-%d') and DATE_FORMAT(paragraphs_item_field_data_node__field_date__paragraph__field_date_de_fin.field_date_de_fin_value, '%Y-%m-%d'))";
			} else
				$query->where[1]["conditions"][1]["field"]="DATE_FORMAT(paragraphs_item_field_data_node__field_date__paragraph__field_date_de_fin.field_date_de_fin_value, '%Y-%m-%d') >= DATE_FORMAT('".$date_fin."', '%Y-%m-%d') 
				OR (DATE_FORMAT(paragraphs_item_field_data_node__field_date__paragraph__field_date_de_fin.field_date_de_fin_value, '%Y-%m-%d') BETWEEN '".$date_deb."' and '".$date_fin."')";
				
		} 
		//ksm($query->where);
		
	}
}
