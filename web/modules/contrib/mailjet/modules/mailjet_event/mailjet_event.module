<?php

use Symfony\Component\HttpFoundation\Response;

/*
 * @file
 * code for Mailjet  Mailjet Event module
*/

function _mailjet_event_alter_callback() {
  // No Event sent.
  if ($_SERVER['REQUEST_METHOD'] != 'POST') {
  }

  $post = trim(file_get_contents('php://input'));

  \Drupal::logger('mailjet')->notice(print_r($post, TRUE));
  $event = json_decode($post);

  // No Informations sent with the Event.
  if (!is_object($event) && !isset($event)) {
    \Drupal::logger('mailjet_event')
      ->error('No Informations sent with the Event.');

  }

  if (isset($event->email)) {
    $mail_user = user_load_by_mail($event->email);

    if (!empty($mail_user)) {
      $mail_user = $mail_user->uuid();
    }
    else {
      print 'No information for user with email: ' . $event->email;
    }

  }
  elseif (isset($event->original_address)) {
    $mail_user = user_load_by_mail($event->original_address);

    if (!empty($mail_user)) {
      $mail_user = $mail_user->uuid();
    }
    else {
      print 'No information for user with email: ' . $event->original_address;
    }
  }

  if (!empty($mail_user)) {

    $entity = \Drupal::entityManager()
      ->loadEntityByUuid('event_entity', $mail_user);
    if (!empty($entity)) {
      $entity->delete();
    }

    $event_data = [
      'event_field' => serialize($event),
      'event_type' => $event->event,
    ];

    $event_entity = \Drupal::entityManager()
      ->getStorage('event_entity')
      ->create($event_data);

    if ($event_entity->save() == TRUE) {
      print 'Event is saved!';
    }

    else {
      print 'Error! Try again to save your event!';
    }

  }

  exit;

}